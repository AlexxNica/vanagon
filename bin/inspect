#!/usr/bin/env ruby
require 'json'
require 'vanagon/extensions/ostruct/json'
require 'vanagon/extensions/set/json'
require 'vanagon/extensions/hashable'

load File.expand_path(File.join(File.dirname(__FILE__), "..", "lib", "vanagon.rb"))

optparse = Vanagon::OptParse.new("#{File.basename(__FILE__)} <project-name> <platform-name> [options]", %i[workdir configdir engine])
options = optparse.parse! ARGV

project = ARGV[0]
platforms = ARGV[1]

unless project or platforms
  warn "project and platform are both required arguments."
  puts optparse
  exit 1
end

platforms.split(',').each do |platform|
  driver = Vanagon::Driver.new(platform, project, options)
  components = driver.project.components.map(&:to_hash)
  puts JSON.pretty_generate(components)
end
